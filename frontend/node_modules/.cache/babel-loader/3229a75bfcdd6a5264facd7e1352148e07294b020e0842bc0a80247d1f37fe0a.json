{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Ground-Booking-App\\\\frontend\\\\src\\\\components\\\\PlayerNavbar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../Styles/playerHome.css'; // Assuming this CSS file contains navbar styles\n\n// PlayerNavbar now accepts 'isLoggedIn' and 'handleLogout' props\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerNavbar = ({\n  isLoggedIn,\n  handleLogout\n}) => {\n  _s();\n  const navigate = useNavigate(); // Keeping navigate if you need it for other non-Link navigations\n\n  const onLogoutClick = () => {\n    // Call the handleLogout function passed from App.js\n    handleLogout();\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"player-navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-navbar-brand\",\n      children: \"Ground Booking App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-navbar-links\",\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/playerHome\",\n          className: \"player-nav-link\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/my-bookings\",\n          className: \"player-nav-link\",\n          children: \"My Bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          className: \"player-nav-link\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"player-nav-link\",\n          onClick: onLogoutClick,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"player-nav-link\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"player-nav-link\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerNavbar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PlayerNavbar;\nexport default PlayerNavbar;\nvar _c;\n$RefreshReg$(_c, \"PlayerNavbar\");","map":{"version":3,"names":["React","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerNavbar","isLoggedIn","handleLogout","_s","navigate","onLogoutClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Ground-Booking-App/frontend/src/components/PlayerNavbar.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../Styles/playerHome.css'; // Assuming this CSS file contains navbar styles\r\n\r\n// PlayerNavbar now accepts 'isLoggedIn' and 'handleLogout' props\r\nconst PlayerNavbar = ({ isLoggedIn, handleLogout }) => {\r\n  const navigate = useNavigate(); // Keeping navigate if you need it for other non-Link navigations\r\n\r\n  const onLogoutClick = () => {\r\n    // Call the handleLogout function passed from App.js\r\n    handleLogout();\r\n  };\r\n\r\n  return (\r\n    <nav className=\"player-navbar\">\r\n      <div className=\"player-navbar-brand\">Ground Booking App</div>\r\n      <div className=\"player-navbar-links\">\r\n        {/* Conditionally render links based on login status */}\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Link to=\"/playerHome\" className=\"player-nav-link\">Home</Link>\r\n            <Link to=\"/my-bookings\" className=\"player-nav-link\">My Bookings</Link>\r\n            <Link to=\"/profile\" className=\"player-nav-link\">Profile</Link>\r\n            <Link to=\"/\" className=\"player-nav-link\" onClick={onLogoutClick}>\r\n              Logout\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* These links will only show if not logged in */}\r\n            <Link to=\"/\" className=\"player-nav-link\">Login</Link>\r\n            <Link to=\"/register\" className=\"player-nav-link\">Register</Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default PlayerNavbar;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,0BAA0B,CAAC,CAAC;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACAH,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,oBACEL,OAAA;IAAKS,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BV,OAAA;MAAKS,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7Dd,OAAA;MAAKS,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAEjCN,UAAU,gBACTJ,OAAA,CAAAE,SAAA;QAAAQ,QAAA,gBACEV,OAAA,CAACH,IAAI;UAACkB,EAAE,EAAC,aAAa;UAACN,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9Dd,OAAA,CAACH,IAAI;UAACkB,EAAE,EAAC,cAAc;UAACN,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtEd,OAAA,CAACH,IAAI;UAACkB,EAAE,EAAC,UAAU;UAACN,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9Dd,OAAA,CAACH,IAAI;UAACkB,EAAE,EAAC,GAAG;UAACN,SAAS,EAAC,iBAAiB;UAACO,OAAO,EAAER,aAAc;UAAAE,QAAA,EAAC;QAEjE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,eACP,CAAC,gBAEHd,OAAA,CAAAE,SAAA;QAAAQ,QAAA,gBAEEV,OAAA,CAACH,IAAI;UAACkB,EAAE,EAAC,GAAG;UAACN,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrDd,OAAA,CAACH,IAAI;UAACkB,EAAE,EAAC,WAAW;UAACN,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,eAChE;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACR,EAAA,CAhCIH,YAAY;EAAA,QACCL,WAAW;AAAA;AAAAmB,EAAA,GADxBd,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}